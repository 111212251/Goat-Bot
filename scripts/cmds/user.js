this.config = {    
  name: "user",
  version: "1.0.2",
  author: {
    name: "NTKhang", 
    contacts: ""
  },
  cooldowns: 5,
  role: 2,
  shortDescription: "Qu·∫£n l√Ω ng∆∞·ªùi d√πng",
  longDescription: "Qu·∫£n l√Ω ng∆∞·ªùi d√πng trong h·ªá th·ªëng bot",
  category: "owner",
  guide: "{prefix}user [find | -f | search | -s] <t√™n c·∫ßn t√¨m>: t√¨m ki·∫øm ng∆∞·ªùi d√πng trong d·ªØ li·ªáu bot b·∫±ng t√™n"
       + "\n"
       + "\n{prefix}user [ban | -b] [<id> | @tag | reply tin nh·∫Øn] <reason>: ƒë·ªÉ c·∫•m ng∆∞·ªùi d√πng mang id <id> ho·∫∑c ng∆∞·ªùi ƒë∆∞·ª£c tag ho·∫∑c ng∆∞·ªùi g·ª≠i c·ªßa tin nh·∫Øn ƒë∆∞·ª£c reply s·ª≠ d·ª•ng bot"
       + "\n"
       + "\n{prefix}user unban [<id> | @tag | reply tin nh·∫Øn]: ƒë·ªÉ b·ªè c·∫•m ng∆∞·ªùi d√πng s·ª≠ d·ª•ng bot"
};

module.exports = {
  config: this.config,
  start: async function({ api, args, usersData, message, client, event, setup }) {
    const moment = require("moment-timezone");
    const type = args[0];
    if (["find", "search", "-f", "-s"].includes(type)) {
      var allUser = await usersData.getAll(["name"]);
      var arrayreturn = [];
      var msg = "";
      var length = 0;
      const keyword = args[1];
      for (let user of allUser) {
        if (user.name.toLowerCase().includes(keyword.toLowerCase())) {
          length++;
          msg += `\n‚ï≠Name: ${user.name}\n‚ï∞ID: ${user.id}`;
        }
      }
      message.reply(length == 0 ? `‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng n√†o c√≥ t√™n kh·ªõp v·ªõi t·ª´ kh√≥a: ${keyword}` : `üîéC√≥ ${length} k·∫øt qu·∫£ ph√π h·ª£p cho t·ª´ kh√≥a "${keyword}":\n${msg}`);
    }
    else if (["ban", "-b"].includes(type)) {
      let id, reason;
      if (event.type == "message_reply") {
        id = event.messageReply.senderID;
        reason = args.slice(1).join(" ");
      } 
      else if (event.mentions) {
        let { mentions } = event;
        id = Object.keys(mentions)[0];
        reason = args.slice(1).join(" ").slice(mentions[id].length + 1);
      }
      else if (args[1]) {
        id = args[1];
        reason = args.slice(2).join(" ");
      }
      else return message.SyntaxError();
      
      if (!id) return message.reply("Id c·ªßa ng∆∞·ªùi c·∫ßn ban kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng, vui l√≤ng nh·∫≠p id ho·∫∑c tag ho·∫∑c teply tin nh·∫Øn c·ªßa 1 ng∆∞·ªùi theo c√∫ ph√°p user ban <id> <l√Ω do>");
			if (!reason) return message.reply("L√Ω do c·∫•m ng∆∞·ªùi d√πng kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng, vui l√≤ng so·∫°n tin nh·∫Øn theo c√∫ ph√°p user ban <id> <l√Ω do>");
      if (!client.allUserData[id]) return message.reply(`Ng∆∞·ªùi d√πng mang id ${id} kh√¥ng t·ªìn t·∫°i trong d·ªØ li·ªáu bot`);
      reason = reason.replace(/\s+/g, ' ');
      const name = (await usersData.getData(id)).name;
      await usersData.setData(id, {
        banned: {
          status: true,
          reason,
          date: moment.tz("Asia/Ho_Chi_Minh").format("DD/MM/YYYY HH:mm:ss")
        }
      }, (err) => {
        if (err) return message.reply(`ƒê√£ x·∫£y ra l·ªói ${err.name}: ${err.message}`);
        else return message.reply(`ƒê√£ c·∫•m ng∆∞·ªùi d√πng mang id ${id} | ${name} s·ª≠ d·ª•ng bot v·ªõi l√Ω do: ${reason}`);
      });
    }
    else if (["unban", "-u"].includes(type)) {
      let id;
      if (event.type == "message_reply") {
        id = event.messageReply.senderID;
      } 
      else if (event.mentions) {
        const { mentions } = event;
        id = Object.keys(mentions)[0];
      }
      else if (args[1]) {
        id = args[1];
      }
      else return message.SyntaxError();
      if (!id) return message.reply("Id c·ªßa ng∆∞·ªùi c·∫ßn ban kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng, vui l√≤ng nh·∫≠p id ho·∫∑c tag ho·∫∑c teply tin nh·∫Øn c·ªßa 1 ng∆∞·ªùi theo c√∫ ph√°p user ban <id> <l√Ω do>");
      if (!client.allUserData[id]) return message.reply(`Ng∆∞·ªùi d√πng mang id ${id} kh√¥ng t·ªìn t·∫°i trong d·ªØ li·ªáu bot`);
      const name = (await usersData.getData(id)).name;
      await usersData.setData(id, { 
        banned: { 
          status: false,
          reason: null 
        }
      }, (err) => {
        if (err) return message.reply(`ƒê√£ x·∫£y ra l·ªói ${err.name}: ${err.message}`);
        else message.reply(`ƒê√£ b·ªè c·∫•m ng∆∞·ªùi d√πng mang id ${id} | ${name}, hi·ªán t·∫°i ng∆∞·ªùi n√†y c√≥ th·ªÉ s·ª≠ d·ª•ng bot`);
      });
    }
    else return message.SyntaxError();
  }
};